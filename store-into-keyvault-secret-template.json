{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageaccountName": {
      "type": "string"
    },
    "storageaccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ]
    },
    "storageaccountLocation": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "West US",
        "West Europe",
        "East Asia",
        "South East Asia"
      ]
    },
    "vaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Vault"
      }
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "Central US",
        "East US",
        "East US 2",
        "North Central US",
        "South Central US",
        "West US",
        "North Europe",
        "West Europe",
        "East Asia",
        "Southeast Asia",
        "Japan East",
        "Japan West",
        "Brazil South",
        "Australia East",
        "Australia Southeast"
      ],
      "metadata": {
        "description": "Key Vault location"
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "Tenant Id of the subscription. Get using Get-AzureSubscription cmdlet or Get Subscription API"
      }
    },
      "secretName": {
      "type": "string"
    },
    "objectId": {
      "type": "string",
      "metadata": {
        "description": "Object Id of the AD user. Get using Get-AzureADUser or Get-AzureADServicePrincipal cmdlets"
      }
    },
    "keysPermissions": {
      "type": "array",
      "defaultValue": [ ],
      "metadata": {
        "description": "Permissions to keys in the vault. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": [ ],
      "metadata": {
        "description": "Permissions to secrets in the vault. Valid values are: all, get, set, list, and delete."
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the vault"
      }
    },
    "enableVaultForDeployment": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the vault is enabled for a VM deployment"
      }
    },
    "enableVaultForDiskEncryption": {
      "type": "bool",
      "defaultValue": false,
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Specifies if the azure platform has access to the vault for enabling disk encryption scenarios."
      }
    }

  },
  "variables": {
  },
  "resources": [
    {
      "name": "[parameters('storageaccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('storageaccountLocation')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "storageaccount"
      },
      "properties": {
        "accountType": "[parameters('storageaccountType')]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('vaultName')]",
      "apiVersion": "2015-06-01",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForDeployment": "[parameters('enableVaultForDeployment')]",
        "enabledForDiskEncryption": "[parameters('enableVaultForDiskEncryption')]",
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [
          {
            "tenantId": "[parameters('tenantId')]",
            "objectId": "[parameters('objectId')]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
            }
          }
        ],
        "sku": {
          "name": "[parameters('skuName')]",
          "family": "A"
        }
      },
      "resources": [
        {
          "type": "secrets",
          "name": "[parameters('secretName')]",
          "apiVersion": "2015-06-01",
          "properties": {
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccountName')), '2015-05-01-preview').key1]"
          },
          "dependsOn": [
            "[concat('Microsoft.KeyVault/vaults/', parameters('vaultName'))]",
            "[concat('Microsoft.Storage/storageAccounts/',parameters('storageaccountName'))]"
          ]
        }
      ]

    }
  ],
  "outputs": {
    "storageaccountkey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageaccountName')), '2015-05-01-preview').key1]"
    }
  }
}
